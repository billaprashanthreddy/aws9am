S3 : Simple Storage Service : Object based Storage

--> Object based Storage : Designed to store flat files:  Amazon S3, GDrive, OneDrive, Dropbox.. 
--> Block based storage : Designed to install and run Operating system : EBS, Instance store
--> Network Based storage : Runs over the network, attach as local storage : EFS, FSx



--> Unlimted storage
--> No Pre-Provisioning required (Pay as you go)
--> Based on access patterns we can choose different storage classes.
--> We store all data in Buckets. 
--> Bucket name must be unique.
--> Max object size : 5 Tb, Min 0 bytes 


Naming Limitation : (Should comply with DNS naming polocies)
--> Min Char : 3, Max 63 char
--> Should not contains any capital letters
--> Accepts Alpha Numeric but lower case only.
--> It should not resemble IP address format. (S3 Static website hosting)
--> Should not start with . , Should not end with . , No Adjesent ..


https://s3.region.amazonaws.com/bucketname/objectname


gdrive 

80 gb data / 100 gb cost			No Pre Provisioning (80 gb)

10 gb Frequently				S3 Standard (3)
20 gb Infrequently accessed			Standard IA (3) / OneZone IA (1)
20 gb Less Critical / Reproducable		RRS (Reduced Redundancy Storage) 
20 gb Archieve data				Glacier / Glacier Deep Archieve
10 gb No Idea 					Intelligent tier storage


Availability : 99.9 % / 99.99% / 99.5 %
Durability : 99.999999999 % (except RRS 99.99%)



Task 1 : Read S3 performance chart : aws.amazon.com/s3

Task 2 : Create an S3 bucket and upload data, Make object publicly accessable.

Version : 
Life Cycle Management rule :
CRR and SRR :
S3 Static website hosting :
Encryption : 
Object Lock : 
Bucket Polocies and ACLs:
Bucket Mangement option : 


Versioning : Track all changes / objects on s3 platform. 
--> Works as backup option also.
--> latest version / Current Version : Most resent uploaded object
--> previous version : All old uploads

When Version : HIDE , If we delete an object, we will get a delete Marker, Delete the "Delete marker" to get the object back to s3 bucket.


LCR : life Cycle Management Rules : 


CRR / SRR : Cross Region Replication and Same Region Replication : 

--> Source bucket and destination bucket should enable with versioning.
--> It's oneway replciation.

S3 Static Website : 

Domain Name = Bucket Name
--> Make public readonly to deliver the website.

--> Availability : 99.99%
--> Durability : 99.999999999 %

index.html
error.html

http://avinash.website.s3-website.ap-south-1.amazonaws.com


http Status codes : 

2xx --> OK / Success
3xx --> Redirection errors
4xx --> Client Side error



Free Tier : 
5 Gb S3 Standard storage class
2000 PUT
20,000 GET


Encryption : 

--> In-Transit Encryption 

	--> SSL / TLS

--> Server Side Encryption / At Rest

	--> SSE - S3 AES-256			(S3 takes care about encry / decryp)
	--> SSE - KMS				(Key Management Service )

		aws/s3 Also manages by KMS
		we can create a key and KMS manages that key

	--> SSE - C (Customer Provided)		(KMS , Customer Can upload his own key)

--> Client Side Encryption

	--> Before uplaoding data to s3, we can encrypt in local device then upload 		encrypted data to s3

Key Usage : We can use the key
Key Administration : We can manage the key, We can even give key delete permissions also.



Object Lock : While creating bucket, we need to enable this feature.
--> Versioning must be enabled

Governance mode : Can be disabled by AWS accounts that have specific IAM permissions.
Compliance mode : Cannot be disabled by any user, including the root account.



Glacier : Data will not be available immediately.

Initialise Restore :  Number of days the restored copy is available 3 days.

Bulk retrieval : Typically within 5-12 hours
Standard retrieval : Typically within 3 - 5 hours
Expedited retrieval : Within 1 - 5 minutes when retrieving (Object size less than 250MB)


Transfer acceleration : NO FREE TIER


SNS : Simple Notiication Service 
Enable : Everyone permissions, if we want to use with s3 bucket.

Topic Name : We need to add subscribers (email ids)
S3Notifications : user email, user email... 


Permissions : 
--> Bucket ACL
--> Bucket Polocies


Access for other AWS accounts : We need cananical ID of another aws account user.


Bucket policy : JSON

Effect : Allow / Deny 			: Deny
Principal : IAM User / Group		: arn:aws:iam::518084852393:user/avinash
Actions : 				: Upload (PUT)
Amazon Resource Name (ARN) : Bucket	: arn:aws:s3:::avinash.12102019


1. IAM User, Full Permissions on S3 platform.. bucket, Deny PUT

{
    "Id": "Policy1576211125461",
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "Stmt1576211115750",
            "Action": [
                "s3:PutObject"
            ],
            "Effect": "Deny",
            "Resource": "arn:aws:s3:::BucketName/*",
            "Principal": {
                "AWS": [
                    "IAM USER/Group ARN"
                ]
            }
        }
    ]
}

____________________________________________________________________

2. IAM User, No Permissions on AWS, Bucket = Allow access


Effect : Allow / Deny 			: Allow
Principal : IAM User / Group		: iam user arn name
Actions : 				: *
Amazon Resource Name (ARN) : Bucket	: arn:aws:s3:::bucketname
					  arn:aws:s3:::bucketname/*

https://s3.console.aws.amazon.com/s3/buckets/bucketname


{
  "Id": "Policy1576211641832",
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "Stmt1576211564024",
      "Action": [
        "s3:ListBucket"
      ],
      "Effect": "Allow",
      "Resource": "bucket name",
      "Principal": {
        "AWS": [
          "iam user arn"
        ]
      }
    },
    {
      "Sid": "Stmt1576211627563",
      "Action": [
        "s3:GetObject",
        "s3:PutObject"
      ],
      "Effect": "Allow",
      "Resource": "bucketname/*",
      "Principal": {
        "AWS": [
          "iam user arn"
        ]
      }
    }
  ]
}

___________________________________________________________________________

Cloudwatch : Metrics / graphs for all our resources about usage. 



Tools to Manage S3 Platform with 3rd party applications:
__________________________________________________________

--> S3browser
--> Cloudberry Explorer
Winscp
Cyberduck

__________________________________________________________

Import / Export :
 
Snowball : 50/80 TB : 200$/Job, 10 Days free, 
Snowball Edge : 100 TB : 250$/Job, 10 Days free, 
Snowmobile : PB Scale Container



Maintain Unique naming prefix to get best peformance from s3 platform

3,500 Uploads/Sec (PUT/COPY/POST/DELETE)
5,500 Downloads/Sec (GET/HEAD requests per second per prefix in a bucket). 


s3://avinash.12102019/A.png

s3://avinash.12102019/avinash/rds.txt, a.txt, b.txt, c.txt
s3://avinash.12102019/naresh/rds.txt, a.txt, b.txt, c.txt


avinash/14/12/2019/a.txt
avinash/14/12/2019/b.txt
avinash/14/12/2019/c.txt
naresh/14/12/2019/c.txt
naresh/14/12/2019/b.txt
naresh/14/12/2019/a.txt


14/12/2019/avinash/a.txt
14/12/2019/avinash/b.txt
14/12/2019/avinash/c.txt
14/12/2019/naresh/a.txt
14/12/2019/naresh/b.txt
14/12/2019/naresh/c.txt















